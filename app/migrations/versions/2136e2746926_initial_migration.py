"""Initial migration

Revision ID: 2136e2746926
Revises: 
Create Date: 2025-02-06 11:37:28.741778

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2136e2746926'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=155), nullable=False),
    sa.Column('slug', sa.String(length=155), nullable=False),
    sa.Column('permission_group', sa.String(length=155), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('slug', sa.String(length=150), nullable=False),
    sa.Column('secondary', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('userType', sa.String(length=155), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstName', sa.String(length=80), nullable=False),
    sa.Column('lastName', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('countryCode', sa.String(length=120), nullable=False),
    sa.Column('mobileNo', sa.BigInteger(), nullable=False),
    sa.Column('empID', sa.String(length=120), nullable=False),
    sa.Column('userType', sa.String(length=120), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deletedAt', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('empID'),
    sa.UniqueConstraint('mobileNo')
    )
    op.create_table('biddings',
    sa.Column('bidId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('projectName', sa.String(length=80), nullable=False),
    sa.Column('projectDescription', sa.String(length=300), nullable=True),
    sa.Column('currency', sa.String(length=80), nullable=True),
    sa.Column('bidAmount', sa.Integer(), nullable=True),
    sa.Column('platform', sa.String(length=80), nullable=False),
    sa.Column('bidDate', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.Column('clientName', sa.String(length=80), nullable=False),
    sa.Column('clientEmail', sa.String(length=120), nullable=False),
    sa.Column('countryCode', sa.String(length=120), nullable=False),
    sa.Column('clientContact', sa.BigInteger(), nullable=False),
    sa.Column('clientCompany', sa.String(length=120), nullable=True),
    sa.Column('clientLocation', sa.String(length=120), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('projectId', sa.Integer(), nullable=True),
    sa.Column('commission', sa.Boolean(), nullable=False),
    sa.Column('approvedBy', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approvedBy'], ['users.id'], ),
    sa.ForeignKeyConstraint(['projectId'], ['projects.projectId'], use_alter=True),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('bidId'),
    sa.UniqueConstraint('projectName')
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity', sa.String(length=50), nullable=False),
    sa.Column('desc', sa.String(length=250), nullable=True),
    sa.Column('ipAddress', sa.String(length=80), nullable=True),
    sa.Column('userAgent', sa.String(length=250), nullable=True),
    sa.Column('device', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message', sa.String(length=255), nullable=False),
    sa.Column('module', sa.String(length=255), nullable=False),
    sa.Column('seen', sa.Boolean(), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('remarks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('remark', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teams',
    sa.Column('teamId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('teamName', sa.String(length=255), nullable=False),
    sa.Column('teamLeadId', sa.Integer(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('createdById', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('techStack', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['createdById'], ['users.id'], ),
    sa.ForeignKeyConstraint(['teamLeadId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('teamId')
    )
    op.create_table('tokens',
    sa.Column('tokenId', sa.Integer(), nullable=False),
    sa.Column('accessToken', sa.String(length=250), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expiryAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tokenId')
    )
    op.create_table('Team_developer_id',
    sa.Column('teamId', sa.Integer(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['developer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['teamId'], ['teams.teamId'], ),
    sa.PrimaryKeyConstraint('teamId', 'developer_id')
    )
    op.create_table('projects',
    sa.Column('projectId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('projectName', sa.String(length=255), nullable=True),
    sa.Column('currency', sa.String(length=80), nullable=True),
    sa.Column('totalBudget', sa.Integer(), nullable=True),
    sa.Column('startDate', sa.Date(), nullable=True),
    sa.Column('deadlineDate', sa.Date(), nullable=True),
    sa.Column('endDate', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('techLeadId', sa.Integer(), nullable=False),
    sa.Column('assignedById', sa.Integer(), nullable=False),
    sa.Column('bidId', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignedById'], ['users.id'], ),
    sa.ForeignKeyConstraint(['bidId'], ['biddings.bidId'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.teamId'], ),
    sa.ForeignKeyConstraint(['techLeadId'], ['users.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('projectId')
    )
    op.create_table('assignments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('desc', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('projectId', sa.Integer(), nullable=False),
    sa.Column('developerId', sa.Integer(), nullable=False),
    sa.Column('testerId', sa.Integer(), nullable=True),
    sa.Column('assignedById', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assignedById'], ['users.id'], ),
    sa.ForeignKeyConstraint(['developerId'], ['users.id'], ),
    sa.ForeignKeyConstraint(['projectId'], ['projects.projectId'], ),
    sa.ForeignKeyConstraint(['testerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('payer_name', sa.String(length=100), nullable=True),
    sa.Column('payer_email', sa.String(length=100), nullable=True),
    sa.Column('payment_provider', sa.String(length=50), nullable=True),
    sa.Column('receipt_url', sa.String(length=255), nullable=True),
    sa.Column('refunded', sa.Boolean(), nullable=True),
    sa.Column('refund_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.projectId'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id', 'transaction_id', name='_project_transaction_uc')
    )
    op.create_table('project_developers',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['developer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.projectId'], ),
    sa.PrimaryKeyConstraint('project_id', 'developer_id')
    )
    op.create_table('assignment_remarks',
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('remark_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], ),
    sa.ForeignKeyConstraint(['remark_id'], ['remarks.id'], ),
    sa.PrimaryKeyConstraint('assignment_id', 'remark_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('assignment_remarks')
    op.drop_table('project_developers')
    op.drop_table('payments')
    op.drop_table('assignments')
    op.drop_table('projects')
    op.drop_table('Team_developer_id')
    op.drop_table('tokens')
    op.drop_table('teams')
    op.drop_table('remarks')
    op.drop_table('notifications')
    op.drop_table('logs')
    op.drop_table('biddings')
    op.drop_table('users')
    op.drop_table('role_permissions')
    op.drop_table('roles')
    op.drop_table('permissions')
    # ### end Alembic commands ###
